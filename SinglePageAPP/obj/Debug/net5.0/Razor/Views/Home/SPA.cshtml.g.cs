#pragma checksum "C:\Users\RI Sojib\Desktop\1270997\Evidence\Evidence\Views\Home\SPA.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b5912132b1ccd3bae063c7b8249f1d1baf8274f2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_SPA), @"mvc.1.0.view", @"/Views/Home/SPA.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\RI Sojib\Desktop\1270997\Evidence\Evidence\Views\_ViewImports.cshtml"
using Evidence;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\RI Sojib\Desktop\1270997\Evidence\Evidence\Views\_ViewImports.cshtml"
using Evidence.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b5912132b1ccd3bae063c7b8249f1d1baf8274f2", @"/Views/Home/SPA.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5d6dd054d9b9b29d44f88c5e4ac946241bbd8f18", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_SPA : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "_PartialViewSPA", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\RI Sojib\Desktop\1270997\Evidence\Evidence\Views\Home\SPA.cshtml"
  
    ViewData["Title"] = "SPA";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("<h2>Single Page Application</h2>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "b5912132b1ccd3bae063c7b8249f1d1baf8274f23616", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<div id=""form"">
    <h3>Create Contact</h3>
    <a href=""#"" onclick=""loadView('list');"">List of Contact</a>
    <div>
        <div>
            <input type=""hidden"" id=""contactId"" />
            Name: <input type=""text"" id=""contactName"" />
        </div><br />
        <div>
            Country:
            <select id=""country""></select>
        </div><br />
        <div>
            Date of Birth: <input type=""date"" id=""dateOfBirth"" />
        </div><br />
        <div>
            Gender:
            <input type=""radio"" id=""Male"" name=""gender"" value=""Male"" /> Male
            <input type=""radio"" id=""Female"" name=""gender"" value=""Female"" /> Female
        </div><br />
        <div>
            Photo:
            <input type=""file"" id=""pic"" name=""pic"" />
        </div><br />
        <div>
            <button type=""button"" onclick=""insert();"" id=""btnInsert"">Save</button>
            <button type=""button"" onclick=""update();"" id=""btnUpdate"">Update</button>
        </div>
    </div>
");
            WriteLiteral(@"
</div>

<script>
    function loadView(view) {
        if (view == 'form') {
            document.getElementById('list').style.display = 'none';
            document.getElementById('form').style.display = '';
        } else {
            document.getElementById('list').style.display = '';
            document.getElementById('form').style.display = 'none';
            this.getAll();
        }
    }
    this.loadView('list');
    this.getCountries();

    var contact = {
        ""contactId"": 0,
        ""contactName"": """",
        ""countryId"": """",
        ""dateOfBirth"": """",
        ""gender"": """"
    };

    function addNew() {
        this.loadView('form');
        this.reset();
        document.getElementById('btnInsert').style.display = '';
        document.getElementById('btnUpdate').style.display = 'none';
    }

    function insert() {
        this.contact.contactId = 0;
        this.contact.contactName = document.getElementById('contactName').value;
        this.contact.cou");
            WriteLiteral(@"ntryId = document.getElementById('country').value;
        this.contact.dateOfBirth = document.getElementById('dateOfBirth').value;
        var gender = document.getElementById(""Male"").checked === true ? 'Male' : 'Female';
        this.contact.gender = gender;
        var strJson = JSON.stringify(this.contact);

        var files = document.getElementById('pic').files;
        var file = files.length > 0 ? files[0] : null;
        var formData = new FormData();
        formData.append(""picPath"", file);
        formData.append(""contactId"", this.contact.contactId);
        formData.append(""contactName"", this.contact.contactName);
        formData.append(""countryId"", this.contact.countryId);
        formData.append(""dateOfBirth"", this.contact.dateOfBirth);
        formData.append(""gender"", this.contact.gender);

        var http = new XMLHttpRequest();
        var url = '/Home/ContactAdd';
        http.open('POST', url, true);
        http.onreadystatechange = function () {
            if (ht");
            WriteLiteral(@"tp.readyState == 4 && http.status == 200) {
                if (http.responseText != null) {
                    var res = JSON.parse(http.responseText);
                    if (res != null) {
                        if (res.resstate == true) {
                            alert('Save successfully.');
                            loadView('list');
                        }
                    }
                }
            }
        }
        http.send(formData);
    }

    function update() {
        this.contact.contactId = document.getElementById('contactId').value;
        this.contact.contactName = document.getElementById('contactName').value;
        this.contact.countryId = document.getElementById('country').value;
        this.contact.dateOfBirth = document.getElementById('dateOfBirth').value;
        var gender = document.getElementById(""Male"").checked === true ? 'Male' : 'Female';
        this.contact.gender = gender;

        var files = document.getElementById('pic').files;
");
            WriteLiteral(@"        var file = files.length > 0 ? files[0] : null;
        var formData = new FormData();
        formData.append(""picPath"", file);
        formData.append(""contactId"", this.contact.contactId);
        formData.append(""contactName"", this.contact.contactName);
        formData.append(""countryId"", this.contact.countryId);
        formData.append(""dateOfBirth"", this.contact.dateOfBirth);
        formData.append(""gender"", this.contact.gender);

        var http = new XMLHttpRequest();
        var url = '/Home/ContactEdit';
        var strJson = JSON.stringify(this.contact);
        http.open('PUT', url, true);
        http.onreadystatechange = function () {
            if (http.readyState == 4 && http.status == 200) {
                if (http.responseText != null) {
                    var res = JSON.parse(http.responseText);
                    if (res != null) {
                        if (res.resstate == true) {
                            alert('Update successfully.');
                ");
            WriteLiteral(@"            loadView('list');
                        }
                    }
                }
            }
        }
        http.send(formData);
    }

    function deleteContact(id) {
        var http = new XMLHttpRequest();
        var url = '/Home/ContactRemove?id=' + id;
        var strJson = JSON.stringify(this.contact);
        http.open('DELETE', url, true);
        http.setRequestHeader('Content-type', 'application/json'); //application/x-www-form-urlencoded
        http.onreadystatechange = function () {
            if (http.readyState == 4 && http.status == 200) {
                if (http.responseText != null) {
                    var res = JSON.parse(http.responseText);
                    if (res.resstate == true) {
                        alert('Remove successfully.');
                        loadView('list');
                    }
                }
            }
        }
        http.send(strJson);
    }

    function edit(id) {
        this.loadView('form');");
            WriteLiteral(@"
        document.getElementById('btnInsert').style.display = 'none';
        document.getElementById('btnUpdate').style.display = '';
        this.getById(id);
    }

    function remove(id) {
        var isConfirm = confirm('Are you sure to delete?');
        if (isConfirm) {
            this.deleteContact(id);
        }
    }

    function reset() {
        document.getElementById('contactId').value = '';
        document.getElementById('contactName').value = '';
        document.getElementById('country').value = '';
        document.getElementById('dateOfBirth').value = '';
        document.getElementById(""Male"").checked = false;
        document.getElementById(""Female"").checked = false;
    }

    function getCountries() {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', '/Home/Countries', true);
        xhr.onload = function () {
            var options = '';
            var listCountry = JSON.parse(this.responseText);
            for (var i = 0; i < listCountry");
            WriteLiteral(@".length; i++) {
                var option = '<option value=""' + listCountry[i].countryId+'"">' + listCountry[i].countryName + '</option>';
                options += option;
            }
            document.getElementById('country').innerHTML = options;
        };
        xhr.send();
    }

    function getAll() {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', '/Home/Contacts', true);
        xhr.onload = function () {
            var tbody = '';
            var listContact = JSON.parse(this.responseText);
            for (var i = 0; i < listContact.length; i++) {
                var tr = '<tr>'
                    + '<td><img src=""/pics/' + listContact[i].picPath+'"" style=""width:120px""></td>'
                    + '<td>' + listContact[i].contactName + '</td>'
                    + '<td>' + listContact[i].countryName + '</td>'
                    + '<td>' + listContact[i].gender + '</td>'
                    + '<td>' + listContact[i].dateOfBirth + '</td>'
             ");
            WriteLiteral(@"       + '<td><a href=""#"" onclick=""remove(' + listContact[i].contactId +')"">Delete</a></td>'
                    + '<td><a href=""#"" onclick=""edit(' + listContact[i].contactId+')"">Edit</a></td>'
                    + '<tr>';
                tbody += tr;
            }
            document.getElementById('listContact').innerHTML = tbody;
        };
        xhr.send();
    }

    function getById(id) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', '/Home/Contact?id=' + id, true);
        xhr.onload = function () {
            var oContact = JSON.parse(this.responseText);
            document.getElementById('contactId').value = oContact.contactId;
            document.getElementById('contactName').value = oContact.contactName;
            document.getElementById('country').value = oContact.countryId;
            document.getElementById('dateOfBirth').value = formatDate(oContact.dateOfBirth);
            document.getElementById(""Male"").checked = oContact.gender == 'Male' ? true ");
            WriteLiteral(@": false;
            document.getElementById(""Female"").checked = oContact.gender == 'Female' ? true : false;
        };
        xhr.send();
    }

    function formatDate(date) {
        var d = new Date(date),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2) {
            month = '0' + month;
        }
        if (day.length < 2) {
            day = '0' + day;
        }
        return [year, month, day].join('-');
    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
